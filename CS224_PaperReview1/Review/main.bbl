% Generated by IEEEtran.bst, version: 1.14 (2015/08/26)
\begin{thebibliography}{1}
\providecommand{\url}[1]{#1}
\csname url@samestyle\endcsname
\providecommand{\newblock}{\relax}
\providecommand{\bibinfo}[2]{#2}
\providecommand{\BIBentrySTDinterwordspacing}{\spaceskip=0pt\relax}
\providecommand{\BIBentryALTinterwordstretchfactor}{4}
\providecommand{\BIBentryALTinterwordspacing}{\spaceskip=\fontdimen2\font plus
\BIBentryALTinterwordstretchfactor\fontdimen3\font minus
  \fontdimen4\font\relax}
\providecommand{\BIBforeignlanguage}[2]{{%
\expandafter\ifx\csname l@#1\endcsname\relax
\typeout{** WARNING: IEEEtran.bst: No hyphenation pattern has been}%
\typeout{** loaded for the language `#1'. Using the pattern for}%
\typeout{** the default language instead.}%
\else
\language=\csname l@#1\endcsname
\fi
#2}}
\providecommand{\BIBdecl}{\relax}
\BIBdecl

\bibitem{CG-PY}
G.~Gharibi, R.~Tripathi, and Y.~Lee, ``Code2graph: automatic generation of
  static call graphs for python source code,'' in \emph{Proceedings of {ASE}},
  2018, pp. 880--883.

\bibitem{CFG-SIM}
Y.~Li, J.~Jang, and X.~Ou, ``Topology-aware hashing for effective control flow
  graph similarity analysis,'' in \emph{Proceedings of {SecureComm}}, vol. 304,
  2019, pp. 278--298.

\bibitem{CG-SIM}
C.~Puodzius, O.~Zendra, A.~Heuser, and L.~Noureddine, ``Accurate and robust
  malware analysis through similarity of external calls dependency graphs
  {(ECDG)},'' in \emph{Proceedings of {ARES}}, 2021, pp. 57:1--57:12.

\bibitem{GRAPH-SIM}
G.~Nikolentzos, P.~Meladianos, and M.~Vazirgiannis, ``Matching node embeddings
  for graph similarity,'' in \emph{Proceedings of {AAAI}}, 2017, pp.
  2429--2435.

\bibitem{CODE-COMP}
F.~Liu, G.~Li, Y.~Zhao, and Z.~Jin, ``Multi-task learning based pre-trained
  language model for code completion,'' in \emph{Proceedings of {ASE}}, 2020,
  pp. 473--485.

\end{thebibliography}
